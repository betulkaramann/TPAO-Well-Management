<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <script src="https://cdn.plot.ly/plotly-latest.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/xlsx/0.17.0/xlsx.full.min.js"></script>
</head>
<body>
    <input type="file" id="excelFileInput">
    <div id="readData"></div>
    <script>
        function degrees_to_radians(degrees) {
            return degrees * (Math.PI / 180);
        }
        document.getElementById('excelFileInput').addEventListener('change', function (event) {
            var file = event.target.files[0];
            var reader = new FileReader();

            reader.onload = function (e) {
                var data = new Uint8Array(e.target.result);
                var workbook = XLSX.read(data, { type: 'array' });
                var sheetName = workbook.SheetNames[0];
                var sheet = workbook.Sheets[sheetName];
                var rows = XLSX.utils.sheet_to_json(sheet);

                var md = rows.map(row => parseFloat(row['MD[m]']));
                var inc = rows.map(row => parseFloat(row['Inc[deg]']));
                var azi = rows.map(row => parseFloat(row['Azi[deg]']));
                var tvd = rows.map(row => parseFloat(row['TVD[m]']));
                var dogleg = rows.map(row => parseFloat(row['Dogleg[deg/30m]']));
                var ss = rows.map(row => parseFloat(row['Vertical-Depth-SS[m]']));
                var w = rows.map(row => parseFloat(row['w']));
                var deneme1 = rows.map(row => parseFloat(row['North[m]']));
                var deneme2 = rows.map(row => parseFloat(row['East[m]']));

                var pointsX = [];
                var pointsY = [];
                var pointsZ = [];
                var uArray = []; 
                var vArray = [];
                var wArray = [];
                var previousX = 0;
                var previousY = 0;
                var A = 1;
                var B = 0.8124;
                var C = 0.5773;
                //North - Y - Axis = MD / 2 * [Sin(I1) * Cos(Az1) + Sin(I2) * Cos(Az2)] * RF
               // East - X - Axes = MD / 2 * [Sin(I1) * Sin(Az1) + Sin(I2) * Sin(Az2)] * RF
               // TVD - Z - Axes = MD / 2 * [Cos(I1) + Cos(I2)] * RF

                //for (var i = 0; i < md.length; i++) {
                //    var depth = md[i];
                //    var azimuth1 = degrees_to_radians(azi[i]);
                //    var inclination1 = degrees_to_radians(inc[i]);
                //    var azimuth2 = degrees_to_radians(azi[i + 1]);
                //    var inclination2 = degrees_to_radians(inc[i + 1]);
                //    let beta_cal = degrees_to_radians(Math.acos(Math.cos(inclination1 - inclination2) - Math.sin(inclination1) * Math.sin(inclination2) * 1 - Math.cos(azimuth2 - azimuth1)));

                //    if (beta_cal == 0) {
                //        beta_cal = degrees_to_radians(Math.pow(10, -100));
                //    }
                //    var RF_cal = (2 / beta_cal) * Math.tan(beta_cal / 2);

                //    var x = (depth / 2) * ((Math.sin(inclination2) * Math.cos(azimuth1)) + (Math.sin(inclination2) * Math.cos(azimuth2) * RF_cal));
                //    var y = (depth / 2) * ((Math.sin(inclination2) * Math.sin(azimuth1)) + (Math.sin(inclination2) * Math.sin(azimuth2) * RF_cal));
                //    var z = (depth / 2) * ((Math.cos(inclination1) * Math.cos(inclination2)) * RF_cal);
                //    pointsX.push(x);
                //    pointsY.push(y);
                //    pointsZ.push(z);
                //    // var y = depth * Math.sin(azimuth * (Math.PI / 180)); // "y" hesaplaması
                //    //var z = tdv[i];

                //    var u = 1 * Math.sin(z) + Math.sqrt(1.0 / 3) * Math.cos(y);
                //    var v = Math.sqrt(2.0 / 3) * Math.sin(x) + 1 * Math.cos(z);
                //    var w = Math.sqrt(1.0 / 3) * Math.sin(y) + Math.sqrt(2.0 / 3) * Math.cos(x);

                //    uArray.push(u);
                //    vArray.push(v);
                //    wArray.push(w);



                //}
             

                for (let i = 1; i < tvd.length; i++) {
                    var tempTVD = tvd[i] - tvd[i - 1];
                    var alpha = Math.acos(tempTVD / 30);
                    var t = 30 * Math.sin(alpha);
                    var x = t * Math.sin(azi[i - 1]); // Dikkat: i-1 indeksi
                    var y = t * Math.cos(azi[i - 1]); // Dikkat: i-1 indeksi

                    pointsX.push(x + previousX);
                    pointsY.push(y + previousY);

                    previousX = pointsX[pointsX.length - 1];
                    previousY = pointsY[pointsY.length - 1];
                }
                console.log(pointsX);
                console.log(pointsY);
                

                

                    var data = [{
                    type: 'scatter3d',
                    mode: 'markers+lines',
                    x: pointsX, //north
                    y: pointsY, //east
                    z: tvd,
                    marker: {
                        size: 4,
                        color: 'pink',
                        colorscale: 'Greens',
                        cmin: -20,
                        cmax: 50,
                    },
                    line: {
                        color: 'darkblue',
                        colorscale: 'Viridis',
                        width: 6
                    }
                }];

                var layout = {
                    scene: {
                        aspectratio: {
                            x: 2,
                            y: 1,
                            z: 2
                        }
                    },
                    margin: {
                        t: 20,
                        b: 20,
                        l: 20,
                        r: 20
                    },
                    width: 900,
                    height: 600
                };

                Plotly.newPlot('readData', data, layout);
            };

            reader.readAsArrayBuffer(file);
        });
    </script>

</body>
</html>
