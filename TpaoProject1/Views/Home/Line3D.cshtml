<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <script src="https://cdn.plot.ly/plotly-latest.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/xlsx/0.17.0/xlsx.full.min.js"></script>
</head>
<body>
    <input type="file" id="excelFileInput">
    <div id="readData"></div>
    <script>
        function radian_to_degree(radian) {
            return radian * (180.0 / Math.PI);
        }
        function degreesToRadians(degrees) {
            return degrees * (Math.PI / 180);
        }

        document.getElementById('excelFileInput').addEventListener('change', function (event) {
            var file = event.target.files[0];
            var reader = new FileReader();

            reader.onload = function (e) {
                var data = new Uint8Array(e.target.result);
                var workbook = XLSX.read(data, { type: 'array' });
                var sheetName = workbook.SheetNames[0];
                var sheet = workbook.Sheets[sheetName];
                var rows = XLSX.utils.sheet_to_json(sheet);

                var md = rows.map(row => parseFloat(row['MD[m]'].replace(',', '.')));
                var inc = rows.map(row => parseFloat(row['Inc[deg]'].replace(',', '.')));
                var azi = (rows.map(row => parseFloat(row['Azi[deg]'].replace(',', '.'))));
                var tvd = rows.map(row => parseFloat(row['TVD[m]'].replace(',', '.')));
                var dogleg = rows.map(row => parseFloat(row['Dogleg[deg/30m]']));
                var ss = rows.map(row => parseFloat(row['Vertical-Depth-SS[m]']));
                var w = rows.map(row => parseFloat(row['w']));
                var deneme1 = rows.map(row => parseFloat(row['North[m]']));
                var deneme2 = rows.map(row => parseFloat(row['East[m]']));

                var pointsX = [];
                var pointsY = [];
                var pointsZ = [];
                var uArray = [];
                var vArray = [];
                var wArray = [];
                var previousX = 0;
                var previousY = 0;


                for (let i = 1; i < tvd.length; i++) {
                    var tempTVD = tvd[i] - tvd[i - 1];
                    var tempMd = md[i] - md[i - 1];
                    var alpha = (Math.acos(tempTVD / tempMd));
                    var t = tempMd * Math.sin(alpha);
                    var y = t * Math.sin(azi[i]); 
                    var x = t * Math.cos(azi[i]); 

                    pointsX.push(x + previousX);
                    pointsY.push(y + previousY);

                    previousX = pointsX[pointsX.length - 1];
                    previousY = pointsY[pointsY.length - 1];
                }
                console.log(pointsX);
                console.log(pointsY);

                for (let i = 1; i < tvd.length; i++){
                    tvd[i] = tvd[i]*(-1);
                }

                var data = [{
                    type: 'scatter3d',
                    mode: 'markers+lines',
                    x: pointsX, 
                    y: pointsY, 
                    z: tvd,
                    marker: {
                        size: 4,
                        color: 'green',
                        colorscale: 'Greens',
                        cmin: -20,
                        cmax: 50,
                    },
                    line: {
                        color: 'blue',
                        colorscale: 'Viridis',
                        width: 6
                    }
                }];

                var layout = {
                    scene: {
                        aspectmode: 'manual',
                        aspectratio: {
                            x: 1,
                            y: 1,
                            z: 1
                        },
                        xaxis: {
                            range: [-500, 500],
                        },
                        yaxis: {
                            range: [-500, 500],
                        },
                        zaxis: {
                            range: [-2000, 0], 
                            autorange: 'false' 
                        }
                    },
                    margin: {
                        t: 20,
                        b: 20,
                        l: 20,
                        r: 20
                    },
                    width: 900,
                    height: 600
                };

                Plotly.newPlot('readData', data, layout);
            };

            reader.readAsArrayBuffer(file);
        });
    </script>

</body>
</html>
