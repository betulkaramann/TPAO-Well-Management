@using TpaoProject1.Model;
@model List<WellTop>;
@using Microsoft.AspNetCore.Identity
@using TpaoProject1.Areas.Identity.Data;

@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <title>Bootstrap Simple Data Table</title>
    <link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Roboto">
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.0/css/bootstrap.min.css">
    <link rel="stylesheet" href="https://fonts.googleapis.com/icon?family=Material+Icons">
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css">
    <script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/popper.js@1.16.0/dist/umd/popper.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.0/js/bootstrap.min.js"></script>
    <script src="https://polyfill.io/v3/polyfill.min.js?features=default"></script>
    <script>

        function initMap() {
            const map = new google.maps.Map(document.getElementById("map"), {
                zoom: 10,
                center: { lat: -33.9, lng: 151.2 },
            });

            setMarkers(map);
        }

        // Data for the markers consisting of a name, a LatLng and a zIndex for the
        // order in which these markers should display on top of each other.
        const beaches = [
            ["Bondi Beach", -33.890542, 151.274856, 4],
            ["Coogee Beach", -33.923036, 151.259052, 5],
            ["Cronulla Beach", -34.028249, 151.157507, 3],
            ["Manly Beach", -33.80010128657071, 151.28747820854187, 2],
            ["Maroubra Beach", -33.950198, 151.259302, 1],
        ];

        function setMarkers(map) {
            // Adds markers to the map.
            // Marker sizes are expressed as a Size of X,Y where the origin of the image
            // (0,0) is located in the top left of the image.
            // Origins, anchor positions and coordinates of the marker increase in the X
            // direction to the right and in the Y direction down.
            const image = {
                url: "https://developers.google.com/maps/documentation/javascript/examples/full/images/beachflag.png",
                // This marker is 20 pixels wide by 32 pixels high.
                size: new google.maps.Size(20, 32),
                // The origin for this image is (0, 0).
                origin: new google.maps.Point(0, 0),
                // The anchor for this image is the base of the flagpole at (0, 32).
                anchor: new google.maps.Point(0, 32),
            };
            // Shapes define the clickable region of the icon. The type defines an HTML
            // <area> element 'poly' which traces out a polygon as a series of X,Y points.
            // The final coordinate closes the poly by connecting to the first coordinate.
            const shape = {
                coords: [1, 1, 1, 20, 18, 20, 18, 1],
                type: "poly",
            };

            for (let i = 0; i < beaches.length; i++) {
                const beach = beaches[i];

                new google.maps.Marker({
                    position: { lat: beach[1], lng: beach[2] },
                    map,
                    icon: image,
                    shape: shape,
                    title: beach[0],
                    zIndex: beach[3],
                });
            }
        }

        window.initMap = initMap;

    </script>
    <style>

        #map {
            height: 400px;
        }

        html, body {
            height: 100%;
            width: 100%;
            margin: 0;
            padding: 0;
            color: #566787;
            background: #f5f5f5;
            font-family: 'Roboto', sans-serif;
        }





        .table-responsive {
            margin: 30px 0;
        }

        .table-wrapper {
            min-width: 1000px;
            background: #fff;
            padding: 20px;
            box-shadow: 0 1px 1px rgba(0,0,0,.05);
        }

        .table-title {
            padding-bottom: 10px;
            margin: 0 0 10px;
            min-width: 100%;
        }

            .table-title h2 {
                margin: 8px 0 0;
                font-size: 22px;
            }

        .search-box {
            position: relative;
            float: right;
        }

            .search-box input {
                height: 34px;
                border-radius: 20px;
                padding-left: 35px;
                border-color: #ddd;
                box-shadow: none;
            }

                .search-box input:focus {
                    border-color: #3FBAE4;
                }

            .search-box i {
                color: #a0a5b1;
                position: absolute;
                font-size: 19px;
                top: 8px;
                left: 10px;
            }

        table.table tr th, table.table tr td {
            border-color: #e9e9e9;
        }

        table.table-striped tbody tr:nth-of-type(odd) {
            background-color: #fcfcfc;
        }

        table.table-striped.table-hover tbody tr:hover {
            background: #f5f5f5;
        }

        table.table th i {
            font-size: 13px;
            margin: 0 5px;
            cursor: pointer;
        }

        table.table td:last-child {
            width: 130px;
        }

        table.table td a {
            color: #a0a5b1;
            display: inline-block;
            margin: 0 5px;
        }

            table.table td a.view {
                color: #03A9F4;
            }

            table.table td a.edit {
                color: #FFC107;
            }

            table.table td a.delete {
                color: #E34724;
            }

        table.table td i {
            font-size: 19px;
        }

        .pagination {
            float: right;
            margin: 0 0 5px;
        }

            .pagination li a {
                border: none;
                font-size: 95%;
                width: 30px;
                height: 30px;
                color: #999;
                margin: 0 2px;
                line-height: 30px;
                border-radius: 30px !important;
                text-align: center;
                padding: 0;
            }

                .pagination li a:hover {
                    color: #666;
                }

            .pagination li.active a {
                background: #03A9F4;
            }

                .pagination li.active a:hover {
                    background: #0397d6;
                }

            .pagination li.disabled i {
                color: #ccc;
            }

            .pagination li i {
                font-size: 16px;
                padding-top: 6px
            }

        .hint-text {
            float: left;
            margin-top: 6px;
            font-size: 95%;
        }
    </style>

    <script>
        $(document).ready(function () {
            $('[data-toggle="tooltip"]').tooltip();
        });
    </script>
</head>
<body>
    <div class="container">
        <div class="row">


            <div class="table-responsive">
                <div class="table-wrapper">

                    <table class="table table-striped table-hover table-bordered">
                        <thead class="bg-light">
                            <tr>
                                @if (User.IsInRole("Admin"))
                                {
                                    <th>Kullanıcı</th>
                                }
                                <th>Kuyu Adı</th>
                                <th>Kuyu Tipi</th>
                                <th>Enlem</th>
                                <th>Boylam</th>
                                <th>Oluşturma Tarihi</th>
                                <th>Güncelleme Tarihi</th>
                                <th>İşlemler</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var wells in Model)
                            {
                                <tr>
                                    @*<td>@wells.Id</td>
                                <td>@UserManager.GetUserAsync(User).Result.FirstName</td>
                                <td>@UserManager.GetUserAsync(User).Result.LastName</td>
                                <td>@UserManager.GetUserAsync(User).Result.Email</td>
                                <td>@wells.Name</td>
                                <td>@wells.Latitude</td>
                                <td>@wells.Longitude</td>
                                <td>@wells.City</td>
                                *@
                                    @if (User.IsInRole("Admin"))
                                    {
                                        <td>
                                            <div class="d-flex align-items-center">

                                                <div class="ms-3">
                                                    <p class="fw-bold mb-1">@UserManager.GetUserAsync(User).Result.FirstName @UserManager.GetUserAsync(User).Result.LastName</p>
                                                    <p class="text-muted mb-0">@UserManager.GetUserAsync(User).Result.Email</p>
                                                </div>
                                            </div>
                                        </td>
                                    }
                                    <td>
                                        <p class="fw-normal mb-1">@wells.Name</p>
                                        <p class="text-muted mb-0">@wells.City</p>
                                    </td>
                                    <td>
                                        @{
                                            if (wells.WellTopType == "arama")
                                            {
                                                <span class="badge badge-primary rounded-pill d-inline">Arama</span>
                                            }
                                            else if (wells.WellTopType == "üretim")
                                            {
                                                <span class="badge badge-success rounded-pill d-inline">Üretim</span>
                                            }
                                            else if (wells.WellTopType == "tespit")
                                            {
                                                <span class="badge badge-info rounded-pill d-inline">Tespit</span>
                                            }

                                        }

                                    </td>

                                    <td>
                                        <p class="fw-normal mb-1">@wells.Latitude</p>
                                    </td>
                                    <td>
                                        <p class="fw-normal mb-1">@wells.Longitude</p>
                                    </td>
                                    <td>@wells.InsertionDate</td>
                                    <td>@wells.UpdateDate</td>

                                    <td>
                                        <a asp-controller="Well" asp-action="Index" asp-route-id="@wells.Id" class="view" title="Detayları Görüntüle" data-toggle="tooltip"><i class="material-icons">&#xE417;</i></a>
                                        <a asp-controller="ViewWelltops" asp-action="Update" asp-route-id="@wells.Id" class="edit" title="Düzenle" data-toggle="tooltip"><i class="material-icons">&#xE254;</i></a>
                                        <a asp-controller="ViewWelltops" asp-action="Delete" asp-route-id="@wells.Id" class="delete" title="Kaydı Sil" data-toggle="tooltip"><i class="material-icons">&#xE872;</i></a>
                                    </td>
                                </tr>
                            }


                        </tbody>
                    </table>

                </div>

            </div>

        </div>
        <div class="row">
            
            <div id="map"></div>
            <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDU_pWP66-BTzvW7AnEcQRSaBPutMzWxU4&callback=initMap&v=weekly"
                    defer></script>
        </div>
    </div>
</body>
</html>