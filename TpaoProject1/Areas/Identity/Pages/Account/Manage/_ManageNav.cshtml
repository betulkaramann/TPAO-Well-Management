@using TpaoProject1.Areas.Identity.Data;
@inject SignInManager<ApplicationUser> SignInManager
@{
    var hasExternalLogins = (await SignInManager.GetExternalAuthenticationSchemesAsync()).Any();
}

<head>
    <style>
        .FlexContainer {
            display: flex;
            flex-wrap: nowrap;
            justify-content: center;
            align-items: center;
            align-content: baseline;
            background-color: #edede9;
            height: 80vh;
            width: 80vh;
            overflow: auto;
            flex-direction: row;
            margin-left: 50vh;
        }

        .attribute a {
            display: flex;
            border-radius: 8px;
            flex-wrap: nowrap;
            justify-content: center;
            align-items: center;
            align-content: baseline;
            background: #4c956c;
            color: #fff;
            padding: 5px 10px;
            overflow: auto;
            text-decoration: none;
        }

        .form-control {
            margin-top: 10px;
            position: relative;
            margin-bottom: 1rem;
        }

        .content-center {
            width: 100%;
            padding: 15px;
            margin-top: auto;
            margin-bottom: auto;
        }

        .content-box {

            width: 100%;
            max-width: 420px;
            min-width: 320px;
            margin: auto;
        }

        .text-center {
            text-align: center !important;
        }

        .text-system {
            color: #ed1c25 !important;
        }

        .btn-primary:hover {
            color: #fff;
            background-color: #ed1c00;
            border-color: #ed1c25;
        }

        /*  .btn-block {
                            display: block;
                            width: 100%;
                        }*/

        .btn-primary {
            color: #fff;
            background-color: #007bff;
            border-color: #007bff;
        }

        .btn {
            display: inline-block;
            font-weight: 400;
            color: white;
            text-align: center;
            vertical-align: middle;
            -webkit-user-select: none;
            -moz-user-select: none;
            -ms-user-select: none;
            user-select: none;
            border: 1px solid transparent;
            background-color: #BB242B;
            padding: 0.375rem 0.75rem;
            font-size: 1rem;
            line-height: 1.5;
            border-radius: 0.25rem;
            transition: color .15s ease-in-out,background-color .15s ease-in-out,border-color .15s ease-in-out,box-shadow .15s ease-in-out;
        }

        .nav-tabs .nav-item .nav-link.active {
            margin-bottom: 10px;
            background-color: #BB242B;
            color: white 
            
        }

        .nav-item:not(:last-child) {
            margin-right: 10px;
        }

        .nav-link {
            color: black
        }

    </style>
</head>

<ul class="nav nav-tabs red ">
    <li class="nav-item"><a class="nav-link  @ManageNavPages.IndexNavClass(ViewContext)" id="profile" asp-page="./Index">Profile</a></li>
    <li class="nav-item"><a class="nav-link  @ManageNavPages.EmailNavClass(ViewContext)" id="email" asp-page="./Email">Email</a></li>
    <li class="nav-item"><a class="nav-link  @ManageNavPages.ChangePasswordNavClass(ViewContext)" id="change-password" asp-page="./ChangePassword">Password</a></li>
    @if (hasExternalLogins)
    {
        <li id="external-logins" class="nav-item"><a id="external-login" class="nav-link @ManageNavPages.ExternalLoginsNavClass(ViewContext)" asp-page="./ExternalLogins">External logins</a></li>
    }
    <li class="nav-item"><a class="nav-link @ManageNavPages.TwoFactorAuthenticationNavClass(ViewContext)" id="two-factor" asp-page="./TwoFactorAuthentication">Two-factor authentication</a></li>
    <li class="nav-item"><a class="nav-link @ManageNavPages.PersonalDataNavClass(ViewContext)" id="personal-data" asp-page="./PersonalData">Personal data</a></li>
</ul>
